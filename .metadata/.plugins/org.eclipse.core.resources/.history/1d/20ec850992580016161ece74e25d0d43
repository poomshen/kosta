
//문자열 누적
//String str = "A"
//for ( str+= "A") 10000번
//여러개의 문자를 누적해서 사용하는 것은 비효율
//String > StringBuffer , StringBuilder
public class Ex10_StringBuffer {
	///여기는 왜 만들었을까?
	public static void main(String[] args) {
		String str ="A"; 
		System.out.println(str.hashCode()); ////음 그래 해쉬 코드의 변화을 알아보기 위한 건가?
		str+="B"; //......
		System.out.println(str.hashCode()); ////더했더니 해쉬 코드가 변했어 그렇군 
		
		
		StringBuffer sb = new StringBuffer(); ///애는 스트링버퍼로 주었다 그래서 뭐
		System.out.println(sb.capacity());  
		sb.append("A");
		System.out.println(sb.hashCode()); // 스트링버퍼로 주니깐 해쉬 코드가 변하지 않은걸 알수 있음
		sb.append("B");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		sb.append("D");
		System.out.println(sb.hashCode());
		System.out.println(sb.capacity());  
		
		//성능테스트 (StringBuffer) 누적에 시간 단축
		//시간 되시면 ...
	}

}
